/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package evaluation2;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.sql.PreparedStatement;

/**
 *
 * @author mk
 */
public class ModeleVueArticle {

    private static final String hote = "jdbc:derby://localhost:1527/Cohorte384";
    private static final String usager = "malcom007";
    private static final String passwd = "%Adelia12";

    private Connection myConnection = null;
    private String sqlc;
    private Statement stmt;
    private ResultSet rS;

    private static Timestamp timestamp;
    HeureSystem timeStampe = new HeureSystem();

    private boolean testConnexion;

    private static final String CREATE_TABLE_ARTICLE_SQL = "CREATE TABLE Article ("
            + "CodeArticle Varchar(5),"
            + "DesignationA Varchar(50) NOT NULL,"             
            + "CodeCat Varchar(5) NOT NULL "
            +       "CONSTRAINT ARTICL_FK_CODCAT REFERENCES Categorie(CodeCateg),"
            + "Prix Double,"
            + "LASTMODFIED TimeStamp,"
            + "PRIMARY KEY (CodeArticle))";
    
    private static final String CREATE_TABLE_CATEGORIE_SQL = "CREATE TABLE Categorie ("
            + "CodeCateg Varchar(5),"
            + "DesignationC Varchar(50) NOT NULL,"
            + "PRIMARY KEY (CodeCateg))";

    PreparedStatement preparedStatementInsert = null;

    String insertTableSQL = "INSERT INTO ARTICLE (CODEARTICLE, DESIGNATIONARTICLE, CODECATEGORIE, PRIXUNITAIRE,LASTMODFIED) VALUES (?,?,?,?,?)";

    public Connection getDBConnection() {

        try {
            System.out.println("Connecting to a selected database...");
            myConnection = DriverManager.getConnection(hote, usager, passwd);
            System.out.println("\nConnected database successfully   " + getCurrentTimeStamp() + "\n");
            testConnexion = true;
        } catch (SQLException e) {
            System.out.println("\nErreur de connexion a la base de données, verifier le mot de passe ou login à " + getCurrentTimeStamp() + "\n");
            testConnexion = false;
        }
        return myConnection;
    }

    /**
     * *
     * Ajout d'un nouveau article
     *
     * @param codeArticle
     * @param designation
     * @param codeCategorie
     * @param Prix
     */
    public void setArticle(String codeArticle, String designation, String codeCategorie, double Prix) {

        sqlc = "INSERT INTO Article (CODEARTICLE, DesignationA, CodeCat, Prix,LASTMODFIED) VALUES (?,?,?,?,?)";

        try {

            //On appelle la methode getConnection    
            myConnection = getDBConnection();

            /*myConnection.setAutoCommit(false);*/
            
            System.out.println("test 1");
            preparedStatementInsert = myConnection.prepareStatement(sqlc);
            System.out.println("test de depart");
            preparedStatementInsert.setString(1, codeArticle);
            preparedStatementInsert.setString(2, designation);
            preparedStatementInsert.setString(3, codeCategorie);
            preparedStatementInsert.setDouble(4, Prix);

            preparedStatementInsert.setTimestamp(5, getCurrentTimeStamp());

            preparedStatementInsert.executeUpdate();

            /*myConnection.commit();*/

            System.out.println("Insertion du :   " + designation + " completé à " + timeStampe.getCurrentTimeStamp());

            stmt = (Statement) myConnection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            sqlc = "Select * from article ";
            rS = stmt.executeQuery(sqlc);

            while (rS.next()) {
                System.out.println(rS.getString(2) + " " + rS.getString(5));
            }
            System.out.println("\nDeconnexiont à la BD à " + getCurrentTimeStamp() + "\n");
        } catch (SQLException e) {
            e.getMessage();
        }finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
                if (myConnection != null) {
                    /*myConnection.close();*/
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }

    public void getAllArticles() {
        try {
            myConnection = getDBConnection();

            stmt = (Statement) myConnection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

            sqlc = "Select * from article ";

            rS = stmt.executeQuery(sqlc);

            while (rS.next()) {
                System.out.println(rS.getString(2) + " " + rS.getString(5));
            }

            System.out.println("\nDeconnexiont à la BD à  " + getCurrentTimeStamp() + "\n");

            System.out.println(" dernier " + rS.next());

        } catch (SQLException e) {
            e.getMessage();
        }

    }
    
    public void createTableCategorie() throws SQLException {
        
        

        try {
            //Connection a la base de données
        myConnection = getDBConnection(); 
            testConnexion=ifTableExist("Categorie");
            System.out.println("test one " +testConnexion);
            
            /*stmt = myConnection.createStatement();*/
            
            
            if (testConnexion) {                
            stmt.executeUpdate("DROP TABLE Categorie");  
                System.out.println("Table supprimé  ");
            } 
            else{
                stmt.executeUpdate(CREATE_TABLE_CATEGORIE_SQL); 
                System.out.println("Table Categorie Created "+ getCurrentTimeStamp() + "\n");
            }
            System.out.println("fin du test");

        } catch (SQLException e) {
            e.printStackTrace();
        } 
        /*finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
                if (myConnection != null) {
                    myConnection.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }*/

    }

    public void createTableArticle() throws SQLException {
        //Connection a la base de données
        
        

        try {
            
            myConnection = getDBConnection();
            testConnexion=ifTableExist("Article");
            stmt = myConnection.createStatement();            
            
            if (testConnexion) {                
            stmt.executeUpdate("DROP TABLE Article");  
                System.out.println("Table supprimé  ");
            } 
            else{
                stmt.executeUpdate(CREATE_TABLE_ARTICLE_SQL); 
                System.out.println("Table created "+ getCurrentTimeStamp() + "\n");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
                if (myConnection != null) {
                    myConnection.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }

    }

    /**
     * *
     * Methode permettant de recuperer l'heureDuSystème
     *
     * @return
     */
    private static java.sql.Timestamp getCurrentTimeStamp() {

        java.util.Date today = new java.util.Date();
        return new java.sql.Timestamp(today.getTime());

    }

    /***
     * Methode qui permet de verifier si la table existe
     * @return
     * @throws SQLException 
     */
    private boolean ifTableExist(String tableName) throws SQLException {        
        
        
        sqlc = "select * from "+ tableName +" where 1=0";
        
            stmt = (Statement) myConnection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);

            try {
                rS = stmt.executeQuery(sqlc);
                rS.close();
                stmt.close();
                return true;
            } catch (SQLException e) {
                System.out.println("\n*** Creation de la table ***\n");
                return false;
            }finally {
            try {
                if (stmt != null) {
                    stmt.close();
                }
                if (myConnection != null) {
                    myConnection.close();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

}
